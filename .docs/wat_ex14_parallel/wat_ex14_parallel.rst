基板上の発熱体（並列計算）
==============================


wat_ex14_parametric を 3 つの Femtet インスタンスで並列化します。
サンプルコード及び実行結果以外の項目は :doc:`../wat_ex14/wat_ex14` と同じです。


サンプルファイル
------------------------------
.. note::

   :download:`サンプルプロジェクト<../../pyfemtet/FemtetPJTSample/wat_ex14_parametric.femprj>`
   を Femtet で開き、
   :download:`サンプルコード<../../pyfemtet/FemtetPJTSample/wat_ex14_parallel_parametric.py>`
   を実行してください。

.. note::

   FEM 問題としての詳細については、FemtetHelp / 例題集 / 熱伝導解析 / 例題14 を参照してください。


設計変数
------------------------------

.. figure:: wat_ex14_model.png
   
   モデルの外観

===========  ============
  変数名         説明
===========  ============
substrate_w  基板の幅
substrate_d  基板の奥行き
===========  ============


目的関数
------------------------------

- メインチップの最高温度（最小にする）
- サブチップの最高温度（最小にする）
- 基板の平面上の専有面積（最小にする）


サンプルコード
------------------------------

.. literalinclude:: ../../pyfemtet/FemtetPJTSample/wat_ex14_parallel_parametric.py
   :language: python
   :linenos:
   :caption: wat_ex14_parallel_parametric.py


.. note::

   並列化を実施するには、main() 関数の引数 n_parallel に並列化したい数を渡すだけです。


サンプルコードの実行結果
------------------------------

実行環境

+--------+--------------------------------------------+
| OS     | windows 10                                 |
+--------+--------------------------------------------+
| CPU    | Intel Core-i7 12700 (12 cores, 20 threads) |
+--------+--------------------------------------------+
| メモリ | 32 GB                                      |
+--------+--------------------------------------------+


実行結果

========  =====
並列なし  3並列
117秒     74秒
========  =====

このデモでは 3 つの Femtet インスタンスでの計算を行いました。
:doc:`../wat_ex14/wat_ex14` の問題について、
上記実行環境で並列を用いない場合は 20 回の試行に 117 秒を要しましたが、
このデモでは 74 秒で 21 回の試行が終了し、実行時間を 37% 低減しています。

.. note::

   N 並列した場合、一般に実行時間は単純に 1/N にはなりません。
   これはプロセスの開始・終了時のオーバーヘッドや
   単一の Femtet インスタンス内部でも並列処理による
   高速化が図られている箇所があるためです。

.. warning::

   実行環境や解析モデルによって並列化による高速化効果は変動します。

.. note::

   Femtet, pyfemtet および依存する最適化エンジンのバージョンにより、結果は多少異なる場合があります。
